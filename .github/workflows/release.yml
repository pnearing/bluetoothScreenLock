name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          sudo apt-get update
          sudo apt-get install -y debhelper devscripts build-essential dpkg-dev dh-sequence-python3 python3-all

      - name: Build Python packages (sdist/wheel)
        run: |
          python -m build
        # outputs in dist/

      - name: Prepare Debian orig tarball
        run: |
          UPSTREAM_VER=$(dpkg-parsechangelog -S Version | sed 's/-.*//')
          PKG=$(dpkg-parsechangelog -S Source)
          echo "Package: $PKG, Upstream version: $UPSTREAM_VER"
          git archive --format=tar.gz --prefix=${PKG}-${UPSTREAM_VER}/ -o ../${PKG}_${UPSTREAM_VER}.orig.tar.gz HEAD

      - name: Build Debian package (unsigned, binary)
        run: |
          debuild -us -uc -b
        # debuild places artifacts one directory up (..)

      - name: Collect artifacts
        run: |
          mkdir -p out
          cp dist/* out/ || true
          cp ../*.deb out/ || true
          cp ../*.buildinfo out/ || true
          cp ../*.changes out/ || true

      - name: Upload artifacts to workflow run
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: out/*

      - name: Publish assets to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            out/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
